{"ast":null,"code":"var _jsxFileName = \"/Users/home/project/frontend/src/components/Resource/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resource = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  const download = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Can't find what you want? You can download more resources \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleModal,\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 75\n      }, this), \".\", /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onRequestClose: toggleModal // contentLabel=\"My dialog\"\n        ,\n        className: \"secondmodal\",\n        overlayClassName: \"secondoverlay\",\n        closeTimeoutMS: 500,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Are you sure you want to download a list of resources?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: download,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Resource, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Resource;\nexport default Resource;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resource\");","map":{"version":3,"names":["React","Resource","isOpen","setIsOpen","useState","toggleModal","download"],"sources":["/Users/home/project/frontend/src/components/Resource/index.js"],"sourcesContent":["import React from 'react';\n\n\nconst Resource = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n\tfunction toggleModal() {\n\t\tsetIsOpen(!isOpen);\n\t}\n\t\n\tconst download = () => {};\n\n\treturn (\n\t\t<div>\n            <h5>Can't find what you want? You can download more resources <button onClick={toggleModal}>here</button>.\n\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\tonRequestClose={toggleModal}\n\t\t\t\t\t\t\t\t// contentLabel=\"My dialog\"\n\t\t\t\t\t\t\t\tclassName=\"secondmodal\"\n\t\t\t\t\t\t\t\toverlayClassName=\"secondoverlay\"\n\t\t\t\t\t\t\t\tcloseTimeoutMS={500}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>Are you sure you want to download a list of resources?</div>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<button onClick={download}>Yes</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</h5>\n        </div>\n\t);\n};\n\nexport default Resource;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC;;EAEH,SAASC,WAAT,GAAuB;IACtBF,SAAS,CAAC,CAACD,MAAF,CAAT;EACA;;EAED,MAAMI,QAAQ,GAAG,MAAM,CAAE,CAAzB;;EAEA,oBACC;IAAA,uBACU;MAAA,sFAA8D;QAAQ,OAAO,EAAED,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA9D,oBACL,QAAC,KAAD;QACC,MAAM,EAAEH,MADT;QAEC,cAAc,EAAEG,WAFjB,CAGC;QAHD;QAIC,SAAS,EAAC,aAJX;QAKC,gBAAgB,EAAC,eALlB;QAMC,cAAc,EAAE,GANjB;QAAA,wBAQC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARD,eASC;UAAA;UAAA;UAAA;QAAA,QATD,eAUC;UAAQ,OAAO,EAAEC,QAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVD;MAAA;QAAA;QAAA;QAAA;MAAA,QADK;IAAA;MAAA;MAAA;MAAA;IAAA;EADV;IAAA;IAAA;IAAA;EAAA,QADD;AAmBA,CA5BD;;GAAML,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}